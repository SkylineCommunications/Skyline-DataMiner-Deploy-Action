name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - name: Set Git Security
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      working-directory: ./GitHubAction
      run: dotnet restore ./GitHubAction.sln
    - name: Build
      working-directory: ./GitHubAction
      run: dotnet build --no-restore
    - name: Test
      working-directory: ./GitHubAction
      run: dotnet test --no-build --verbosity normal --logger "trx;logfilename=unitTestResults.trx" --collect "XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura,opencover
      
    - name: Install SonarCloud scanner
      run: dotnet tool install dotnet-sonarscanner --global
      
    - name: Analyze On SonarCloud
      working-directory: ./GitHubAction
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
          dotnet sonarscanner begin /k:"SkylineCommunications_Skyline-DataMiner-Deploy-Action" /o:"skylinecommunications" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/TestResults/**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/TestResults/**.trx"
          dotnet build "./GitHubAction.sln" --configuration Release -nodeReuse:false
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
